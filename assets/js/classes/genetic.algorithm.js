var GA = (function(){
  function getNonPercent(val, populationSize){
    return val*populationSize/100;
  }

  var generateElements = function(){

  }

  var Genration = function(ga, elements){
    var self = this;
    
    self.elements = elements || generateElements();
    self.ga = ga;

    self.fitness = function(){

    }

    self.evolve = function(){

    }
  }


/**
  * @params:
  *   options: 
  *     elitismPercent: percent of population, composed by the best elements, 
  *       which elements will be the fathers and mothers of the next elements
  *     mutationPercent: percent of mutation applyed to evolve.
  *     populationSize: the size of the population.
  *     generateFirstGen: true if the first generation will be generated
  *       false if it will be given.
  *     firstGeneration: the first generation, in case that it wont be 
  *       generated by the GA algorithm.
  *     genesToEvolve: the list of genes which will be evolved.
  *     builder: function that returns a new element given an object with the evolved gens.    
  *
**/
  var GA = function (options) {
    var self = this;

    self.options = options;
    self.elitism = getNonPercent(self.options.elitismPercent, populationSize);
    self.mutationPercent = getNonPercent(self.options.mutationPercent, populationSize);


    self.firstGeneration = function(){
      return self.firstGeneration || new Generation(self);
    }


  }

  return GA;
})();
